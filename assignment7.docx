Q1.What is Exception in Java?
Ans. In Java, exception is an event that occurs during the execution of a program and disrupts the normal flow of the program's instructions.

Q2.What is Exception Handling?
Ans. Exception handling is the process of responding to unwanted or unexpected events when a computer program runs. Exception handling deals with these events to avoid the program or system crashing, and without this process, exceptions would disrupt the normal operation of a program.

Q3.What is the difference between Checked and Unchecked Exceptions and Error?
Ans. A checked exception is caught at compile time whereas a runtime or unchecked exception is, as it states, at runtime.

Q4.What are the difference between throw and throws in Java?
Ans. The throw keyword is used to throw an exception explicitly. It can throw only one exception at a time. The throws keyword can be used to declare multiple exceptions, separated by a comma. Whichever exception occurs, if matched with the declared ones, is thrown automatically then.

Q5.What is multithreading in Java? mention its advantages
Ans. Multithreading is a widely used concept in Java training that allows concurrent execution of two or more threads within a single program. It's an essential aspect of Java programming, as it improves the overall performance and responsiveness of applications.

Q6.Write a program to create and call a custom exception
Ans. // class representing custom exception  
class InvalidAgeException  extends Exception  
{  
    public InvalidAgeException (String str)  
    {  
        // calling the constructor of parent Exception  
        super(str);  
    }  
}  
    
// class that uses custom exception InvalidAgeException  
public class TestCustomException1  
{  
  
    // method to check the age  
    static void validate (int age) throws InvalidAgeException{    
       if(age < 18){  
  
        // throw an object of user defined exception  
        throw new InvalidAgeException("age is not valid to vote");    
    }  
       else {   
        System.out.println("welcome to vote");   
        }   
     }    
  
    // main method  
    public static void main(String args[])  
    {  
        try  
        {  
            // calling the method   
            validate(13);  
        }  
        catch (InvalidAgeException ex)  
        {  
            System.out.println("Caught the exception");  
    
            // printing the message from InvalidAgeException object  
            System.out.println("Exception occured: " + ex);  
        }  
  
        System.out.println("rest of the code...");    
    }  
}  

Q7.How can you handle exceptions in Java? 
Ans. The "catch" block is used to handle the exception. It must be preceded by try block which means we can't use catch block alone. It can be followed by finally block later. The "finally" block is used to execute the necessary code of the program.

Q8.What is Thread in Java?
Ans. A thread is a thread of execution in a program. The Java Virtual Machine allows an application to have multiple threads of execution running concurrently. Every thread has a priority. Threads with higher priority are executed in preference to threads with lower priority.

Q9. What are the two ways of implementing thread in Java?
Ans. There are two ways to create a thread: 
By extending Thread class
By implementing Runnable interface.

Q10.What do you mean by garbage collection?
Ans. Garbage collection ensures that a program does not exceed its memory quota or reach a point that it can no longer function. It also frees up developers from having to manually manage a program's memory, which, in turn, reduces the potential for memory-related bugs.
